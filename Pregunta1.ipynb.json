{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Pregunta 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Paso No. 1\n",
    "### Importar librerías"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Importar la librería que almacena toda la data a analizar, y cambiar su formato a csv para poder leerlo."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "pd.read_csv(\"allstate.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Guardar la libreria en una variable para que sea mas útil, al utlizarlo en funciones. La variable donde lo guardaré se llamara _users.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "users = pd.read_csv(\"allstate.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Procedamos a responder la pregunta\n",
    "# 1)¿Qué características tienen los grupos a los que se les cotiza los seguros más baratos?\n",
    "\n",
    "## Las variables que nos van a ser utiles son:\n",
    "#### _cost - cost of the quoted coverage options\n",
    "#### _record_type - 0=shopping point, 1=purchase point"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "## Paso No. 1\n",
    "### Filtramos la data en unta tabla, de tal forma que podamos ver la cantidad de users que hicieron una cotizacion, al principio vimos que eran mas de 665 mil datos. Lo cual decidimos ponerle una restricción, con un parámetro de las cotizaciones guardadas en la variable COST con un valor de 425 o menos. Y la otra variable que me es útil es \"Record_type\" y 1 significa que son los usuarios que Si compraron.  El código que logra hacer todo esto es:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "filtro = (users.cost <= 425)&(users.record_type==1) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Paso No.2\n",
    "### Esto me devolverá de toda mi data de allstate, en costo los valores que cuesten 425 o menos y el otro parametro de que, SI hayan comprado el seguro. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creo una variable donde se guarde el valor de la funcion donde filtré mis datos."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "data=users[filtro]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Luego, podemos interpretar en nuestra tabla de resultado de las variables, que: **\"La mayoria que cotiza son personas de un grupo de un integrante, solteros, con casa, y en un rango de edad de 30 años\"**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
